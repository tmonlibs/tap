name: brew-tests
on: [push, pull_request]
env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
jobs:
  tap_syntax:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Cache Bundler RubyGems
      uses: actions/cache@v1
      with:
        path: ${{ steps.set-up-homebrew.outputs.gems-path }}
        key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
        restore-keys: ${{ runner.os }}-rubygems-

    - name: Install Bundler RubyGems
      run: brew install-bundler-gems

    - run: brew test-bot --only-tap-syntax

    #- name: Check .github/workflows/tests-linux.yml formulae coverage
    #  run: |
    #    FILES=$(grep -oE 'Formula/[a-z0-9_\.\-]+' .github/workflows/tests-linux.yml)
    #    for FILE in $FILES; do
    #      if [ ! -f "$FILE" ]; then
    #        echo ".github/workflows/tests-linux.yml is testing a non existing file: $FILE"
    #        exit 1
    #      fi
    #      if [ ! grep -q "depends_on :linux" "$FILE"]; then
    #        echo "$FILE is not a linux-only formula."
    #        exit 1
    #      fi
    #    done

  tests:
    needs: tap_syntax
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
      fail-fast: false
    timeout-minutes: 4320
    env:
      PATH: '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin'
      HOMEBREW_DEVELOPER: 1
      GITHUB_ACTIONS_HOMEBREW_SELF_HOSTED: 1
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - name: Run brew test-bot --only-formulae
        run: |
          mkdir bottles
          cd bottles
          brew test-bot -v -d --tap --only-formulae

      - name: Output brew test-bot --only-formulae failures
        if: always()
        run: |
          cat bottles/steps_output.txt
          rm bottles/steps_output.txt

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: logs (${{ matrix.version }})
          path: bottles/logs

      - name: Delete logs and home
        if: always()
        run: |
          rm -rvf bottles/logs
          rm -rvf bottles/home

      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd bottles
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"

      - name: Upload bottles
        if: always() && steps.bottles.outputs.count > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: bottles

      - run: brew test-bot --only-cleanup-after
        if: always()

      - name: Post Cleanup
        if: always()
        run: rm -rvf bottles
